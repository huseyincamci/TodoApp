@model HomeIndexViewModel
@{
    ViewData["Title"] = "Home Page";
}

<h2>
    @ViewData["Title"]
    <a href="#" class="btn btn-dark btn-sm float-right" data-toggle="modal" data-target="#CreateTodoListModal">
        <i class="fas fa-plus"></i>
        New To Do List
    </a>
</h2>
<hr />

<div class="row">
    @if (Model.TodoList.Any())
    {
        @foreach (var todoList in Model.TodoList)
        {
            <div class="col-md-4">
                <div class="card mb-3 todoListCard" style="max-width: 20rem;">
                    <div class="card-header">
                        <h5>
                            @todoList.Name

                        </h5>
                    </div>
                    <div class="card-body" style="padding: 10px;">
                        @if (todoList.Items.Any())
                        {
                            <div class="list-group">
                                @foreach (var item in todoList.Items)
                                {
                                    <a href="#" class="list-group-item list-group-item-action showEditItemModal" data-item-id="@item.Id" data-toggle="modal" data-target="#EditItemModal">
                                        @item.Name
                                    </a>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning alert-dismissible">
                                No todo items
                            </div>
                        }
                    </div>
                    <div class="card-footer text-muted">
                        <a href="#" class="btn btn-info btn-sm float-right ml-1 btnAddItem" data-toggle="modal" data-target="#CreateNewItemModal" data-todo-id="@todoList.Id">Add</a>
                        <a href="#" class="btn btn-danger btn-sm float-right btnDeleteTodoList" data-todo-id="@todoList.Id">
                            <i class="fas fa-trash"></i>
                        </a>
                    </div>
                </div>
            </div>
        }
    }
</div>


@Html.Partial("_Modal", new ModalConfiguration { Id = "CreateTodoListModal", Title = "Create New To Do List", BodyId = "CreateTodoListModalBody", TitleId = "CreateTodoListModalTitle", ButtonId = "saveBtn" })

@Html.Partial("_Modal", new ModalConfiguration { Id = "CreateNewItemModal", Title = "Create New Item", BodyId = "CreateNewItemModalBody", TitleId = "CreateNewItemModalTitle", ButtonId = "saveItem" })

@Html.Partial("_Modal", new ModalConfiguration { Id = "EditItemModal", Title = "Edit Item", BodyId = "EditItemModalBody", TitleId = "EditItemModalTitle", ButtonId = "editItem" })


@section Scripts {
    <script src="~/lib/bootbox.js/bootbox.min.js"></script>
    <script>
        $(function () {
            $("#CreateTodoListModal").on("show.bs.modal", function (e) {
                $("#CreateTodoListModalBody").load("/Home/LoadTodoModal");
            });

            $("#CreateNewItemModal").on("show.bs.modal", function (e) {
                $("#CreateNewItemModalBody").load("/Home/LoadItemModal");
            });


            //Create new To Do List
            var btnSave = $("#saveBtn");
            btnSave.on("click", function (e) {
                e.preventDefault();
                var todoListNameInput = $("#todoListName");
                var todoListName = todoListNameInput.val().trim();

                todoListNameInput.val("");

                if (todoListName != "") {
                    axios.post("/api/todos", {
                        'name': todoListName
                    }).then(function (response) {
                        if (response.status == 200) {
                            window.location = "home";
                            console.log("Your To Do List has been created successfully")
                        }
                    });
                }
            });

            //Delete To Do List
            var btnDeleteTodoList = $(".btnDeleteTodoList");
            btnDeleteTodoList.on("click", function (e) {
                e.preventDefault();
                var todoId = $(this).data("todo-id");
                var url = "/api/todos/" + todoId;
                var card = $(this).parents(".todoListCard").parent();

                bootbox.confirm("Are you sure to delete the todolist?", function (result) {
                    if (result) {
                        axios.delete(url)
                            .then(function (response) {
                                if (response.status === 204) {
                                    card.remove();
                                }
                            });
                    }
                })
            });

            //Add new item
            var btnAddItem = $(".btnAddItem");
            var todoId;
            btnAddItem.on("click", function (e) {
                e.preventDefault();
                todoId = $(this).data("todo-id");
            });

            var btnSaveItem = $("#saveItem");
            btnSaveItem.on("click", function (e) {
                e.preventDefault();
                var itemDto = {
                    "Name": $("#itemName").val().trim(),
                    "Deadline": $("#itemDeadline").val(),
                    "Description": $("#itemDescription").val().trim(),
                    "Status": $("[name='customRadio']:checked").val(),
                    "TodoId": todoId
                };

                axios.post("/api/item", itemDto)
                    .then(function (response) {
                        if (response.status === 200) {
                            window.location = "home";
                        }
                    });
            });

            //Show edit item modal
            var showEditItemModal = $(".showEditItemModal");
            var itemId;
            showEditItemModal.on("click", function (e) {
                e.preventDefault();
                itemId = $(this).data("item-id");
            });

            //Edit specific item
            $("#EditItemModal").on("show.bs.modal", function (e) {
                $("#EditItemModalBody").load("/Home/LoadEditItemModal");
                axios.get("/api/item/" + itemId)
                    .then(function (response) {
                        if (response.status === 200) {
                            var date = response.data.deadline.substr(0, response.data.deadline.indexOf("T"));
                            $("#itemName").val(response.data.name);
                            $("#itemDescription").val(response.data.description);
                            $("input[name=customRadio][value=" + response.data.status + "]").prop("checked", true);
                            $("#itemDeadline").val(date);
                            $("#todoId").val(response.data.id);
                            $("#itemId").val(itemId);



                            //Delete item
                            var btnDeleteItem = $("#deleteItem");
                            btnDeleteItem.on("click", function (e) {
                                e.preventDefault();
                                console.log(btnDeleteItem)
                                bootbox.confirm("Are you sure to delete the item?", function (result) {
                                    if (result) {
                                        axios.delete("/api/item/" + itemId)
                                            .then(function (response) {
                                                if (response.status === 204) {
                                                    window.location = "home";
                                                }
                                            });
                                    }
                                })
                            })
                        }
                    });
            });

            var editItem = $("#editItem");
            editItem.on("click", function (e) {
                e.preventDefault();
                var itemDto = {
                    "Name": $("#itemName").val().trim(),
                    "Deadline": $("#itemDeadline").val(),
                    "Description": $("#itemDescription").val().trim(),
                    "Status": $("[name='customRadio']:checked").val(),
                    "TodoId": $("#todoId").val()
                };
                axios.put("/api/item", itemDto)
                    .then(function (response) {
                        console.log(response);
                        if (response.status === 200) {
                            window.location = "home";
                        }
                    });
            });



        });
    </script>
}

